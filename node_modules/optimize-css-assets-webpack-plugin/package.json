{
  "_args": [
    [
      {
        "raw": "optimize-css-assets-webpack-plugin@^3.2.0",
        "scope": null,
        "escapedName": "optimize-css-assets-webpack-plugin",
        "name": "optimize-css-assets-webpack-plugin",
        "rawSpec": "^3.2.0",
        "spec": ">=3.2.0 <4.0.0",
        "type": "range"
      },
      "C:\\USers\\gxw\\desktop\\Rebate\\rebate"
    ]
  ],
  "_from": "optimize-css-assets-webpack-plugin@>=3.2.0 <4.0.0",
  "_id": "optimize-css-assets-webpack-plugin@3.2.0",
  "_inCache": true,
  "_location": "/optimize-css-assets-webpack-plugin",
  "_nodeVersion": "8.1.4",
  "_npmOperationalInternal": {
    "host": "s3://npm-registry-packages",
    "tmp": "tmp/optimize-css-assets-webpack-plugin-3.2.0.tgz_1505380184349_0.5731823737733066"
  },
  "_npmUser": {
    "name": "nmfr",
    "email": "nunomr@gmail.com"
  },
  "_npmVersion": "5.3.0",
  "_phantomChildren": {},
  "_requested": {
    "raw": "optimize-css-assets-webpack-plugin@^3.2.0",
    "scope": null,
    "escapedName": "optimize-css-assets-webpack-plugin",
    "name": "optimize-css-assets-webpack-plugin",
    "rawSpec": "^3.2.0",
    "spec": ">=3.2.0 <4.0.0",
    "type": "range"
  },
  "_requiredBy": [
    "#DEV:/"
  ],
  "_resolved": "https://registry.npmjs.org/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-3.2.0.tgz",
  "_shasum": "09a40c4cefde1dd0142444a873c56aa29eb18e6f",
  "_shrinkwrap": null,
  "_spec": "optimize-css-assets-webpack-plugin@^3.2.0",
  "_where": "C:\\USers\\gxw\\desktop\\Rebate\\rebate",
  "author": {
    "name": "Nuno Rodrigues"
  },
  "bugs": {
    "url": "https://github.com/NMFR/optimize-css-assets-webpack-plugin/issues"
  },
  "dependencies": {
    "cssnano": "^3.4.0",
    "last-call-webpack-plugin": "^2.1.2"
  },
  "description": "A Webpack plugin to optimize \\ minimize CSS assets.",
  "devDependencies": {},
  "directories": {},
  "dist": {
    "integrity": "sha512-Fjn7wyyadPAriuH2DHamDQw5B8GohEWbroBkKoPeP+vSF2PIAPI7WDihi8WieMRb/At4q7Ea7zTKaMDuSoIAAg==",
    "shasum": "09a40c4cefde1dd0142444a873c56aa29eb18e6f",
    "tarball": "https://registry.npmjs.org/optimize-css-assets-webpack-plugin/-/optimize-css-assets-webpack-plugin-3.2.0.tgz"
  },
  "gitHead": "52c0699192e81ab72b800c101e31c0085c9df70a",
  "homepage": "http://github.com/NMFR/optimize-css-assets-webpack-plugin",
  "keywords": [
    "CSS",
    "minimize",
    "optimize",
    "webpack",
    "remove",
    "duplicate",
    "extract-text-webpack-plugin"
  ],
  "license": "MIT",
  "main": "index.js",
  "maintainers": [
    {
      "name": "nmfr",
      "email": "nunomr@gmail.com"
    }
  ],
  "name": "optimize-css-assets-webpack-plugin",
  "optionalDependencies": {},
  "readme": "# Optimize CSS Assets Webpack Plugin\n\nA Webpack plugin to optimize \\ minimize CSS assets.\n\n## What does the plugin do?\n\nIt will search for CSS assets during the Webpack build and will optimize \\ minimize the CSS (by default it uses [cssnano](http://github.com/ben-eb/cssnano) but a custom CSS processor can be specified).\n\n### Solves [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) CSS duplication problem:\n\nSince [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) only bundles (merges) text chunks, if its used to bundle CSS, the bundle might have duplicate entries (chunks can be duplicate free but when merged, duplicate CSS can be created).\n\n## Installation:\n\nUsing npm:\n```shell\n$ npm install --save-dev optimize-css-assets-webpack-plugin\n```\n\n## Configuration:\n\nThe plugin can receive the following options (all of them are optional):\n* assetNameRegExp: A regular expression that indicates the names of the assets that should be optimized \\ minimized, defaults to `/\\.css$/g`\n* cssProcessor: The CSS processor used to optimize \\ minimize the CSS, defaults to [cssnano](http://github.com/ben-eb/cssnano). This should be a function that follows cssnano.process interface (receives a CSS and options parameters and returns a Promise).\n* cssProcessorOptions: The options passed to the cssProcessor, defaults to `{}`\n* canPrint: A boolean indicating if the plugin can print messages to the console, defaults to `true`\n\n## Example:\n\n``` javascript\nvar OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nmodule.exports = {\n\tmodule: {\n\t\tloaders: [\n\t\t\t{ test: /\\.css$/, loader: ExtractTextPlugin.extract(\"style-loader\", \"css-loader\") }\n\t\t]\n\t},\n\tplugins: [\n\t\tnew ExtractTextPlugin(\"styles.css\"),\n    new OptimizeCssAssetsPlugin({\n      assetNameRegExp: /\\.optimize\\.css$/g,\n      cssProcessor: require('cssnano'),\n      cssProcessorOptions: { discardComments: {removeAll: true } },\n      canPrint: true\n    })\n\t]\n}\n```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+ssh://git@github.com/NMFR/optimize-css-assets-webpack-plugin.git"
  },
  "version": "3.2.0"
}
