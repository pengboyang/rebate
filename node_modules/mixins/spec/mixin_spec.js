var mixins = require('../lib/mixin');

describe('Mixin', function() {

  var base = null;

  beforeEach(function() {
    this.base = function() {};
  })

  it('should extend base with mixin functions', function() {
    var mixin = {
      foo: function() { return 1; }
    }

    mixins.extend(this.base, mixin)

    expect(this.base.foo).toBeDefined()
    expect(this.base.foo()).toBe(1)
  })

  it('should extend base with mixin properties', function() {
    var mixin = {
      foo: 'bar'
    }

    mixins.extend(this.base, mixin)

    expect(this.base.foo).toBeDefined()
    expect(this.base.foo).toBe('bar')
  })  

  it('should override base property with mixin', function() {
    var mixin = {
      foo: 'bar'
    }

    this.base.foo = 'baz'

    mixins.extend(this.base, mixin)

    expect(this.base.foo).toBe('bar')
  }) 
  
  it('should copy prototype functions', function() {
    var mixin = function() {};

    mixin.prototype.foo = function() { return 'bar'; };

    mixins.extend(this.base, mixin);

    var instance = new this.base()

    expect(instance.foo()).toBe('bar')
  })    
})